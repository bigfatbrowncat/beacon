diff --git a/tools/sk_app/Window.h b/tools/sk_app/Window.h
index 76be66206e..37db36aee1 100644
--- a/tools/sk_app/Window.h
+++ b/tools/sk_app/Window.h
@@ -15,6 +15,9 @@
 #include "tools/skui/InputState.h"
 #include "tools/skui/Key.h"
 #include "tools/skui/ModifierKey.h"
+#include "tools/sk_app/Application.h"
+
+#include "../../ui/events/event_utils.h"
 
 class GrContext;
 class SkCanvas;
@@ -27,7 +30,7 @@ class WindowContext;
 
 class Window {
 public:
-    static Window* CreateNativeWindow(void* platformData);
+    static Window* CreateNativeWindow(const std::shared_ptr<PlatformData>& platformData);
 
     virtual ~Window();
 
@@ -82,11 +85,16 @@ public:
         // return value of 'true' means 'I have handled this event'
         virtual void onBackendCreated() {}
         virtual void onAttach(Window* window) {}
-        virtual bool onChar(SkUnichar c, skui::ModifierKey) { return false; }
-        virtual bool onKey(skui::Key, skui::InputState, skui::ModifierKey) { return false; }
-        virtual bool onMouse(int x, int y, skui::InputState, skui::ModifierKey) { return false; }
-        virtual bool onMouseWheel(float delta, skui::ModifierKey) { return false; }
-        virtual bool onTouch(intptr_t owner, skui::InputState, float x, float y) { return false; }
+        virtual bool onChar(const ui::PlatformEvent& platformEvent, SkUnichar c, 
+                            skui::ModifierKey) { return false; }
+        virtual bool onKey(const ui::PlatformEvent& platformEvent, uint64_t, skui::InputState,
+                           skui::ModifierKey) { return false; }
+        virtual bool onMouse(const ui::PlatformEvent& platformEvent, int x, int y, skui::InputState,
+                             skui::ModifierKey) { return false; }
+        virtual bool onMouseWheel(const ui::PlatformEvent& platformEvent, float delta,
+                                  skui::ModifierKey) { return false; }
+        virtual bool onTouch(const ui::PlatformEvent& platformEvent, intptr_t owner,
+                             skui::InputState, float x, float y) { return false; }
         // Platform-detected gesture events
         virtual bool onFling(skui::InputState state) { return false; }
         virtual bool onPinch(skui::InputState state, float scale, float x, float y) { return false; }
@@ -94,6 +102,8 @@ public:
         virtual void onPrePaint() {}
         virtual void onPaint(SkSurface*) {}
         virtual void onResize(int width, int height) {}
+        virtual void onBeginResizing() {}
+        virtual void onEndResizing() {}
 
     private:
         friend class Window;
@@ -106,17 +116,23 @@ public:
     }
 
     void onBackendCreated();
-    bool onChar(SkUnichar c, skui::ModifierKey modifiers);
-    bool onKey(skui::Key key, skui::InputState state, skui::ModifierKey modifiers);
-    bool onMouse(int x, int y, skui::InputState state, skui::ModifierKey modifiers);
-    bool onMouseWheel(float delta, skui::ModifierKey modifiers);
-    bool onTouch(intptr_t owner, skui::InputState state, float x, float y);  // multi-owner = multi-touch
+    bool onChar(const ui::PlatformEvent& platformEvent, SkUnichar c, skui::ModifierKey modifiers);
+    bool onKey(const ui::PlatformEvent& platformEvent, uint64_t key, skui::InputState state,
+               skui::ModifierKey modifiers);
+    bool onMouse(const ui::PlatformEvent& platformEvent, int x, int y, skui::InputState state,
+                 skui::ModifierKey modifiers);
+    bool onMouseWheel(const ui::PlatformEvent& platformEvent, float delta,
+                      skui::ModifierKey modifiers);
+    bool onTouch(const ui::PlatformEvent& platformEvent, intptr_t owner, skui::InputState state,
+                 float x, float y);  // multi-owner = multi-touch
     // Platform-detected gesture events
     bool onFling(skui::InputState state);
     bool onPinch(skui::InputState state, float scale, float x, float y);
     void onUIStateChanged(const SkString& stateName, const SkString& stateValue);
     void onPaint();
     void onResize(int width, int height);
+    void onBeginResizing();
+    void onEndResizing();
 
     int width() const;
     int height() const;
